{
  "version": "1.14.0",
  "compound": {
    "kind": "example",
    "id": "h__s_d_i-12_slave_implementation_8ino-example",
    "name": "h_SDI-12_slave_implementation.ino",
    "url_base": "h__s_d_i-12_slave_implementation_8ino-example",
    "url": "h__s_d_i-12_slave_implementation_8ino-example.html",
    "include": null,
    "has_template_details": false,
    "templates": null,
    "brief": "Example H: Using SDI-12 in Slave Mode.",
    "description": "<p>Example H: Using SDI-12 in Slave Mode</p><aside class=\"m-note m-default\"><h4>Copyright</h4><p>Stroud Water Research Center</p></aside><aside class=\"m-note m-default\"><h4>License</h4><p>This example is published under the BSD-3 license.</p></aside><aside class=\"m-note m-default\"><h4>Date</h4><p>2016</p></aside><aside class=\"m-note m-default\"><h4>Author</h4><p>D. Wasielewski</p></aside><p>Example sketch demonstrating how to implement an arduino as a slave on an SDI-12 bus. This may be used, for example, as a middleman between an I2C sensor and an SDI-12 data logger.</p><p>Note that an SDI-12 slave must respond to M! or C! with the number of values it will report and the max time until these values will be available. This example uses 9 values available in 21 s, but references to these numbers and the output array size and datatype should be changed for your specific application.</p><p>D. Wasielewski, 2016 Builds upon work started by: <a href=\"https://github.com/jrzondagh/AgriApps-SDI-12-Arduino-Sensor\">https:/<wbr />/<wbr />github.com/<wbr />jrzondagh/<wbr />AgriApps-SDI-12-Arduino-Sensor</a> <a href=\"https://github.com/Jorge-Mendes/Agro-Shield/tree/master/SDI-12ArduinoSensor\">https:/<wbr />/<wbr />github.com/<wbr />Jorge-Mendes/<wbr />Agro-Shield/<wbr />tree/<wbr />master/<wbr />SDI-12ArduinoSensor</a></p><p>Suggested improvements:</p><ul><li>Get away from memory-hungry arduino String objects in favor of char buffers</li><li>Make an int variable for the &quot;number of values to report&quot; instead of the hard-coded 9s interspersed throughout the code</li></ul><div class=\"m-code-arduino\"><div class=\"highlight\"><div class=\"line\"><a id=\"l-1\" name=\"l-1\"></a><span class=\"linenos\">  1</span><span class=\"cm\">/**</span></div>\n<div class=\"line\"><a id=\"l-2\" name=\"l-2\"></a><span class=\"linenos\">  2</span><span class=\"cm\"> * @example{lineno} h_SDI-12_slave_implementation.ino</span></div>\n<div class=\"line\"><a id=\"l-3\" name=\"l-3\"></a><span class=\"linenos\">  3</span><span class=\"cm\"> * @copyright Stroud Water Research Center</span></div>\n<div class=\"line\"><a id=\"l-4\" name=\"l-4\"></a><span class=\"linenos\">  4</span><span class=\"cm\"> * @license This example is published under the BSD-3 license.</span></div>\n<div class=\"line\"><a id=\"l-5\" name=\"l-5\"></a><span class=\"linenos\">  5</span><span class=\"cm\"> * @date 2016</span></div>\n<div class=\"line\"><a id=\"l-6\" name=\"l-6\"></a><span class=\"linenos\">  6</span><span class=\"cm\"> * @author D. Wasielewski</span></div>\n<div class=\"line\"><a id=\"l-7\" name=\"l-7\"></a><span class=\"linenos\">  7</span><span class=\"cm\"> *</span></div>\n<div class=\"line\"><a id=\"l-8\" name=\"l-8\"></a><span class=\"linenos\">  8</span><span class=\"cm\"> * @brief Example H:  Using SDI-12 in Slave Mode</span></div>\n<div class=\"line\"><a id=\"l-9\" name=\"l-9\"></a><span class=\"linenos\">  9</span><span class=\"cm\"> *</span></div>\n<div class=\"line\"><a id=\"l-10\" name=\"l-10\"></a><span class=\"linenos\"> 10</span><span class=\"cm\"> * Example sketch demonstrating how to implement an arduino as a slave on an SDI-12 bus.</span></div>\n<div class=\"line\"><a id=\"l-11\" name=\"l-11\"></a><span class=\"linenos\"> 11</span><span class=\"cm\"> * This may be used, for example, as a middleman between an I2C sensor and an SDI-12</span></div>\n<div class=\"line\"><a id=\"l-12\" name=\"l-12\"></a><span class=\"linenos\"> 12</span><span class=\"cm\"> * data logger.</span></div>\n<div class=\"line\"><a id=\"l-13\" name=\"l-13\"></a><span class=\"linenos\"> 13</span><span class=\"cm\"> *</span></div>\n<div class=\"line\"><a id=\"l-14\" name=\"l-14\"></a><span class=\"linenos\"> 14</span><span class=\"cm\"> * Note that an SDI-12 slave must respond to M! or C! with the number of values it will</span></div>\n<div class=\"line\"><a id=\"l-15\" name=\"l-15\"></a><span class=\"linenos\"> 15</span><span class=\"cm\"> * report and the max time until these values will be available.  This example uses 9</span></div>\n<div class=\"line\"><a id=\"l-16\" name=\"l-16\"></a><span class=\"linenos\"> 16</span><span class=\"cm\"> * values available in 21 s, but references to these numbers and the output array size</span></div>\n<div class=\"line\"><a id=\"l-17\" name=\"l-17\"></a><span class=\"linenos\"> 17</span><span class=\"cm\"> * and datatype should be changed for your specific application.</span></div>\n<div class=\"line\"><a id=\"l-18\" name=\"l-18\"></a><span class=\"linenos\"> 18</span><span class=\"cm\"> *</span></div>\n<div class=\"line\"><a id=\"l-19\" name=\"l-19\"></a><span class=\"linenos\"> 19</span><span class=\"cm\"> * D. Wasielewski, 2016</span></div>\n<div class=\"line\"><a id=\"l-20\" name=\"l-20\"></a><span class=\"linenos\"> 20</span><span class=\"cm\"> * Builds upon work started by:</span></div>\n<div class=\"line\"><a id=\"l-21\" name=\"l-21\"></a><span class=\"linenos\"> 21</span><span class=\"cm\"> * https://github.com/jrzondagh/AgriApps-SDI-12-Arduino-Sensor</span></div>\n<div class=\"line\"><a id=\"l-22\" name=\"l-22\"></a><span class=\"linenos\"> 22</span><span class=\"cm\"> * https://github.com/Jorge-Mendes/Agro-Shield/tree/master/SDI-12ArduinoSensor</span></div>\n<div class=\"line\"><a id=\"l-23\" name=\"l-23\"></a><span class=\"linenos\"> 23</span><span class=\"cm\"> *</span></div>\n<div class=\"line\"><a id=\"l-24\" name=\"l-24\"></a><span class=\"linenos\"> 24</span><span class=\"cm\"> * Suggested improvements:</span></div>\n<div class=\"line\"><a id=\"l-25\" name=\"l-25\"></a><span class=\"linenos\"> 25</span><span class=\"cm\"> *  - Get away from memory-hungry arduino String objects in favor of char buffers</span></div>\n<div class=\"line\"><a id=\"l-26\" name=\"l-26\"></a><span class=\"linenos\"> 26</span><span class=\"cm\"> *  - Make an int variable for the &quot;number of values to report&quot; instead of the</span></div>\n<div class=\"line\"><a id=\"l-27\" name=\"l-27\"></a><span class=\"linenos\"> 27</span><span class=\"cm\"> *    hard-coded 9s interspersed throughout the code</span></div>\n<div class=\"line\"><a id=\"l-28\" name=\"l-28\"></a><span class=\"linenos\"> 28</span><span class=\"cm\"> */</span></div>\n<div class=\"line\"><a id=\"l-29\" name=\"l-29\"></a><span class=\"linenos\"> 29</span></div>\n<div class=\"line\"><a id=\"l-30\" name=\"l-30\"></a><span class=\"linenos\"> 30</span><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;SDI12.h&gt;</span></div>\n<div class=\"line\"><a id=\"l-31\" name=\"l-31\"></a><span class=\"linenos\"> 31</span></div>\n<div class=\"line\"><a id=\"l-32\" name=\"l-32\"></a><span class=\"linenos\"> 32</span><span class=\"cp\">#ifndef SDI12_DATA_PIN</span></div>\n<div class=\"line\"><a id=\"l-33\" name=\"l-33\"></a><span class=\"linenos\"> 33</span><span class=\"cp\">#define SDI12_DATA_PIN 7</span></div>\n<div class=\"line\"><a id=\"l-34\" name=\"l-34\"></a><span class=\"linenos\"> 34</span><span class=\"cp\">#endif</span></div>\n<div class=\"line\"><a id=\"l-35\" name=\"l-35\"></a><span class=\"linenos\"> 35</span><span class=\"cp\">#ifndef SDI12_POWER_PIN</span></div>\n<div class=\"line\"><a id=\"l-36\" name=\"l-36\"></a><span class=\"linenos\"> 36</span><span class=\"cp\">#define SDI12_POWER_PIN 22</span></div>\n<div class=\"line\"><a id=\"l-37\" name=\"l-37\"></a><span class=\"linenos\"> 37</span><span class=\"cp\">#endif</span></div>\n<div class=\"line\"><a id=\"l-38\" name=\"l-38\"></a><span class=\"linenos\"> 38</span></div>\n<div class=\"line\"><a id=\"l-39\" name=\"l-39\"></a><span class=\"linenos\"> 39</span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">dataPin</span><span class=\"w\">       </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SDI12_DATA_PIN</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"cm\">/*!&lt; The pin of the SDI-12 data bus */</span></div>\n<div class=\"line\"><a id=\"l-40\" name=\"l-40\"></a><span class=\"linenos\"> 40</span><span class=\"kr\">int8_t</span><span class=\"w\"> </span><span class=\"n\">powerPin</span><span class=\"w\">      </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SDI12_POWER_PIN</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"cm\">/*!&lt; The sensor power pin (or -1) */</span></div>\n<div class=\"line\"><a id=\"l-41\" name=\"l-41\"></a><span class=\"linenos\"> 41</span><span class=\"kr\">char</span><span class=\"w\">   </span><span class=\"n\">sensorAddress</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">&#39;5&#39;</span><span class=\"p\">;</span><span class=\"w\">             </span><span class=\"cm\">/*!&lt; The address of the SDI-12 sensor */</span></div>\n<div class=\"line\"><a id=\"l-42\" name=\"l-42\"></a><span class=\"linenos\"> 42</span><span class=\"kr\">int</span><span class=\"w\">    </span><span class=\"n\">state</span><span class=\"w\">         </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-43\" name=\"l-43\"></a><span class=\"linenos\"> 43</span></div>\n<div class=\"line\"><a id=\"l-44\" name=\"l-44\"></a><span class=\"linenos\"> 44</span><span class=\"cp\">#define WAIT 0</span></div>\n<div class=\"line\"><a id=\"l-45\" name=\"l-45\"></a><span class=\"linenos\"> 45</span><span class=\"cp\">#define INITIATE_CONCURRENT 1</span></div>\n<div class=\"line\"><a id=\"l-46\" name=\"l-46\"></a><span class=\"linenos\"> 46</span><span class=\"cp\">#define INITIATE_MEASUREMENT 2</span></div>\n<div class=\"line\"><a id=\"l-47\" name=\"l-47\"></a><span class=\"linenos\"> 47</span><span class=\"cp\">#define PROCESS_COMMAND 3</span></div>\n<div class=\"line\"><a id=\"l-48\" name=\"l-48\"></a><span class=\"linenos\"> 48</span></div>\n<div class=\"line\"><a id=\"l-49\" name=\"l-49\"></a><span class=\"linenos\"> 49</span><span class=\"c1\">// Create object by which to communicate with the SDI-12 bus on SDIPIN</span></div>\n<div class=\"line\"><a id=\"l-50\" name=\"l-50\"></a><span class=\"linenos\"> 50</span><span class=\"n\">SDI12</span><span class=\"w\"> </span><span class=\"nf\">slaveSDI12</span><span class=\"p\">(</span><span class=\"n\">dataPin</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-51\" name=\"l-51\"></a><span class=\"linenos\"> 51</span></div>\n<div class=\"line\"><a id=\"l-52\" name=\"l-52\"></a><span class=\"linenos\"> 52</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nf\">pollSensor</span><span class=\"p\">(</span><span class=\"kr\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">measurementValues</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-53\" name=\"l-53\"></a><span class=\"linenos\"> 53</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.111111</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-54\" name=\"l-54\"></a><span class=\"linenos\"> 54</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-2.222222</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-55\" name=\"l-55\"></a><span class=\"linenos\"> 55</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">3.333333</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-56\" name=\"l-56\"></a><span class=\"linenos\"> 56</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-4.444444</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-57\" name=\"l-57\"></a><span class=\"linenos\"> 57</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">5.555555</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-58\" name=\"l-58\"></a><span class=\"linenos\"> 58</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-6.666666</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-59\" name=\"l-59\"></a><span class=\"linenos\"> 59</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">7.777777</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-60\" name=\"l-60\"></a><span class=\"linenos\"> 60</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-8.888888</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-61\" name=\"l-61\"></a><span class=\"linenos\"> 61</span><span class=\"w\">  </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">-9.999999</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-62\" name=\"l-62\"></a><span class=\"linenos\"> 62</span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-63\" name=\"l-63\"></a><span class=\"linenos\"> 63</span></div>\n<div class=\"line\"><a id=\"l-64\" name=\"l-64\"></a><span class=\"linenos\"> 64</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nf\">parseSdi12Cmd</span><span class=\"p\">(</span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-65\" name=\"l-65\"></a><span class=\"linenos\"> 65</span><span class=\"w\">  </span><span class=\"cm\">/* Ingests a command from an SDI-12 master, sends the applicable response, and</span></div>\n<div class=\"line\"><a id=\"l-66\" name=\"l-66\"></a><span class=\"linenos\"> 66</span><span class=\"cm\">   * (when applicable) sets a flag to initiate a measurement</span></div>\n<div class=\"line\"><a id=\"l-67\" name=\"l-67\"></a><span class=\"linenos\"> 67</span><span class=\"cm\">   */</span></div>\n<div class=\"line\"><a id=\"l-68\" name=\"l-68\"></a><span class=\"linenos\"> 68</span></div>\n<div class=\"line\"><a id=\"l-69\" name=\"l-69\"></a><span class=\"linenos\"> 69</span><span class=\"w\">  </span><span class=\"c1\">// First char of command is always either (a) the address of the device being</span></div>\n<div class=\"line\"><a id=\"l-70\" name=\"l-70\"></a><span class=\"linenos\"> 70</span><span class=\"w\">  </span><span class=\"c1\">// probed OR (b) a &#39;?&#39; for address query.</span></div>\n<div class=\"line\"><a id=\"l-71\" name=\"l-71\"></a><span class=\"linenos\"> 71</span><span class=\"w\">  </span><span class=\"c1\">// Do nothing if this command is addressed to a different device</span></div>\n<div class=\"line\"><a id=\"l-72\" name=\"l-72\"></a><span class=\"linenos\"> 72</span><span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">sensorAddress</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"sc\">&#39;?&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-73\" name=\"l-73\"></a><span class=\"linenos\"> 73</span></div>\n<div class=\"line\"><a id=\"l-74\" name=\"l-74\"></a><span class=\"linenos\"> 74</span><span class=\"w\">  </span><span class=\"c1\">// If execution reaches this point, the slave should respond with something in</span></div>\n<div class=\"line\"><a id=\"l-75\" name=\"l-75\"></a><span class=\"linenos\"> 75</span><span class=\"w\">  </span><span class=\"c1\">// the form:   &lt;address&gt;&lt;responseStr&gt;&lt;Carriage Return&gt;&lt;Line Feed&gt;</span></div>\n<div class=\"line\"><a id=\"l-76\" name=\"l-76\"></a><span class=\"linenos\"> 76</span><span class=\"w\">  </span><span class=\"c1\">// The following if-switch-case block determines what to put into &lt;responseStr&gt;,</span></div>\n<div class=\"line\"><a id=\"l-77\" name=\"l-77\"></a><span class=\"linenos\"> 77</span><span class=\"w\">  </span><span class=\"c1\">// and the full response will be constructed afterward. For &#39;?!&#39; (address query)</span></div>\n<div class=\"line\"><a id=\"l-78\" name=\"l-78\"></a><span class=\"linenos\"> 78</span><span class=\"w\">  </span><span class=\"c1\">// or &#39;a!&#39; (acknowledge active) commands, responseStr is blank so section is skipped</span></div>\n<div class=\"line\"><a id=\"l-79\" name=\"l-79\"></a><span class=\"linenos\"> 79</span><span class=\"w\">  </span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-80\" name=\"l-80\"></a><span class=\"linenos\"> 80</span><span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-81\" name=\"l-81\"></a><span class=\"linenos\"> 81</span><span class=\"w\">    </span><span class=\"k\">switch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-82\" name=\"l-82\"></a><span class=\"linenos\"> 82</span><span class=\"w\">      </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"sc\">&#39;I&#39;</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-83\" name=\"l-83\"></a><span class=\"linenos\"> 83</span><span class=\"w\">        </span><span class=\"c1\">// Identify command</span></div>\n<div class=\"line\"><a id=\"l-84\" name=\"l-84\"></a><span class=\"linenos\"> 84</span><span class=\"w\">        </span><span class=\"c1\">// Slave should respond with ID message: 2-char SDI-12 version + 8-char</span></div>\n<div class=\"line\"><a id=\"l-85\" name=\"l-85\"></a><span class=\"linenos\"> 85</span><span class=\"w\">        </span><span class=\"c1\">// company name + 6-char sensor model + 3-char sensor version + 0-13 char S/N</span></div>\n<div class=\"line\"><a id=\"l-86\" name=\"l-86\"></a><span class=\"linenos\"> 86</span><span class=\"w\">        </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;13COMPNAME0000011.0001&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Substitute proper ID String here</span></div>\n<div class=\"line\"><a id=\"l-87\" name=\"l-87\"></a><span class=\"linenos\"> 87</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-88\" name=\"l-88\"></a><span class=\"linenos\"> 88</span><span class=\"w\">      </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"sc\">&#39;C&#39;</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-89\" name=\"l-89\"></a><span class=\"linenos\"> 89</span><span class=\"w\">        </span><span class=\"c1\">// Initiate concurrent measurement command</span></div>\n<div class=\"line\"><a id=\"l-90\" name=\"l-90\"></a><span class=\"linenos\"> 90</span><span class=\"w\">        </span><span class=\"c1\">// Slave should immediately respond with: &quot;tttnn&quot;:</span></div>\n<div class=\"line\"><a id=\"l-91\" name=\"l-91\"></a><span class=\"linenos\"> 91</span><span class=\"w\">        </span><span class=\"c1\">//    3-digit (seconds until measurement is available) +</span></div>\n<div class=\"line\"><a id=\"l-92\" name=\"l-92\"></a><span class=\"linenos\"> 92</span><span class=\"w\">        </span><span class=\"c1\">//    2-digit (number of values that will be available)</span></div>\n<div class=\"line\"><a id=\"l-93\" name=\"l-93\"></a><span class=\"linenos\"> 93</span><span class=\"w\">        </span><span class=\"c1\">// Slave should also start a measurement and relinquish control of the data line</span></div>\n<div class=\"line\"><a id=\"l-94\" name=\"l-94\"></a><span class=\"linenos\"> 94</span><span class=\"w\">        </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-95\" name=\"l-95\"></a><span class=\"linenos\"> 95</span><span class=\"w\">          </span><span class=\"s\">&quot;02109&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// 9 values ready in 21 sec; Substitute sensor-specific values here</span></div>\n<div class=\"line\"><a id=\"l-96\" name=\"l-96\"></a><span class=\"linenos\"> 96</span><span class=\"w\">        </span><span class=\"c1\">// It is not preferred for the actual measurement to occur in this subfunction,</span></div>\n<div class=\"line\"><a id=\"l-97\" name=\"l-97\"></a><span class=\"linenos\"> 97</span><span class=\"w\">        </span><span class=\"c1\">// because doing to would hold the main program hostage until the measurement</span></div>\n<div class=\"line\"><a id=\"l-98\" name=\"l-98\"></a><span class=\"linenos\"> 98</span><span class=\"w\">        </span><span class=\"c1\">// is complete.  Instead, we&#39;ll just set a flag and handle the measurement</span></div>\n<div class=\"line\"><a id=\"l-99\" name=\"l-99\"></a><span class=\"linenos\"> 99</span><span class=\"w\">        </span><span class=\"c1\">// elsewhere.</span></div>\n<div class=\"line\"><a id=\"l-100\" name=\"l-100\"></a><span class=\"linenos\">100</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">INITIATE_CONCURRENT</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-101\" name=\"l-101\"></a><span class=\"linenos\">101</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-102\" name=\"l-102\"></a><span class=\"linenos\">102</span><span class=\"w\">        </span><span class=\"c1\">// NOTE: &quot;aC1...9!&quot; commands may be added by duplicating this case and adding</span></div>\n<div class=\"line\"><a id=\"l-103\" name=\"l-103\"></a><span class=\"linenos\">103</span><span class=\"w\">        </span><span class=\"c1\">//       additional states to the state flag</span></div>\n<div class=\"line\"><a id=\"l-104\" name=\"l-104\"></a><span class=\"linenos\">104</span><span class=\"w\">      </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"sc\">&#39;M&#39;</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-105\" name=\"l-105\"></a><span class=\"linenos\">105</span><span class=\"w\">        </span><span class=\"c1\">// Initiate measurement command</span></div>\n<div class=\"line\"><a id=\"l-106\" name=\"l-106\"></a><span class=\"linenos\">106</span><span class=\"w\">        </span><span class=\"c1\">// Slave should immediately respond with: &quot;tttnn&quot;:</span></div>\n<div class=\"line\"><a id=\"l-107\" name=\"l-107\"></a><span class=\"linenos\">107</span><span class=\"w\">        </span><span class=\"c1\">//    3-digit (seconds until measurement is available) +</span></div>\n<div class=\"line\"><a id=\"l-108\" name=\"l-108\"></a><span class=\"linenos\">108</span><span class=\"w\">        </span><span class=\"c1\">//    1-digit (number of values that will be available)</span></div>\n<div class=\"line\"><a id=\"l-109\" name=\"l-109\"></a><span class=\"linenos\">109</span><span class=\"w\">        </span><span class=\"c1\">// Slave should also start a measurement but may keep control of the data line</span></div>\n<div class=\"line\"><a id=\"l-110\" name=\"l-110\"></a><span class=\"linenos\">110</span><span class=\"w\">        </span><span class=\"c1\">// until advertised time elapsed OR measurement is complete and service request</span></div>\n<div class=\"line\"><a id=\"l-111\" name=\"l-111\"></a><span class=\"linenos\">111</span><span class=\"w\">        </span><span class=\"c1\">// sent</span></div>\n<div class=\"line\"><a id=\"l-112\" name=\"l-112\"></a><span class=\"linenos\">112</span><span class=\"w\">        </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span></div>\n<div class=\"line\"><a id=\"l-113\" name=\"l-113\"></a><span class=\"linenos\">113</span><span class=\"w\">          </span><span class=\"s\">&quot;0219&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// 9 values ready in 21 sec; Substitute sensor-specific values here</span></div>\n<div class=\"line\"><a id=\"l-114\" name=\"l-114\"></a><span class=\"linenos\">114</span><span class=\"w\">        </span><span class=\"c1\">// It is not preferred for the actual measurement to occur in this subfunction,</span></div>\n<div class=\"line\"><a id=\"l-115\" name=\"l-115\"></a><span class=\"linenos\">115</span><span class=\"w\">        </span><span class=\"c1\">// because doing to would hold the main program hostage until the measurement is</span></div>\n<div class=\"line\"><a id=\"l-116\" name=\"l-116\"></a><span class=\"linenos\">116</span><span class=\"w\">        </span><span class=\"c1\">// complete.  Instead, we&#39;ll just set a flag and handle the measurement</span></div>\n<div class=\"line\"><a id=\"l-117\" name=\"l-117\"></a><span class=\"linenos\">117</span><span class=\"w\">        </span><span class=\"c1\">// elsewhere. It is preferred though not required that the slave send a service</span></div>\n<div class=\"line\"><a id=\"l-118\" name=\"l-118\"></a><span class=\"linenos\">118</span><span class=\"w\">        </span><span class=\"c1\">// request upon completion of the measurement.  This should be handled in the</span></div>\n<div class=\"line\"><a id=\"l-119\" name=\"l-119\"></a><span class=\"linenos\">119</span><span class=\"w\">        </span><span class=\"c1\">// main loop().</span></div>\n<div class=\"line\"><a id=\"l-120\" name=\"l-120\"></a><span class=\"linenos\">120</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">INITIATE_MEASUREMENT</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-121\" name=\"l-121\"></a><span class=\"linenos\">121</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-122\" name=\"l-122\"></a><span class=\"linenos\">122</span><span class=\"w\">        </span><span class=\"c1\">// NOTE: &quot;aM1...9!&quot; commands may be added by duplicating this case and adding</span></div>\n<div class=\"line\"><a id=\"l-123\" name=\"l-123\"></a><span class=\"linenos\">123</span><span class=\"w\">        </span><span class=\"c1\">//       additional states to the state flag</span></div>\n<div class=\"line\"><a id=\"l-124\" name=\"l-124\"></a><span class=\"linenos\">124</span></div>\n<div class=\"line\"><a id=\"l-125\" name=\"l-125\"></a><span class=\"linenos\">125</span><span class=\"w\">      </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"sc\">&#39;D&#39;</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-126\" name=\"l-126\"></a><span class=\"linenos\">126</span><span class=\"w\">        </span><span class=\"c1\">// Send data command</span></div>\n<div class=\"line\"><a id=\"l-127\" name=\"l-127\"></a><span class=\"linenos\">127</span><span class=\"w\">        </span><span class=\"c1\">// Slave should respond with a String of values</span></div>\n<div class=\"line\"><a id=\"l-128\" name=\"l-128\"></a><span class=\"linenos\">128</span><span class=\"w\">        </span><span class=\"c1\">// Values to be returned must be split into Strings of 35 characters or fewer</span></div>\n<div class=\"line\"><a id=\"l-129\" name=\"l-129\"></a><span class=\"linenos\">129</span><span class=\"w\">        </span><span class=\"c1\">// (75 or fewer for concurrent).  The number following &quot;D&quot; in the SDI-12 command</span></div>\n<div class=\"line\"><a id=\"l-130\" name=\"l-130\"></a><span class=\"linenos\">130</span><span class=\"w\">        </span><span class=\"c1\">// specifies which String to send</span></div>\n<div class=\"line\"><a id=\"l-131\" name=\"l-131\"></a><span class=\"linenos\">131</span><span class=\"w\">        </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">[(</span><span class=\"kr\">int</span><span class=\"p\">)</span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">48</span><span class=\"p\">];</span></div>\n<div class=\"line\"><a id=\"l-132\" name=\"l-132\"></a><span class=\"linenos\">132</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-133\" name=\"l-133\"></a><span class=\"linenos\">133</span><span class=\"w\">      </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"sc\">&#39;A&#39;</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-134\" name=\"l-134\"></a><span class=\"linenos\">134</span><span class=\"w\">        </span><span class=\"c1\">// Change address command</span></div>\n<div class=\"line\"><a id=\"l-135\" name=\"l-135\"></a><span class=\"linenos\">135</span><span class=\"w\">        </span><span class=\"c1\">// Slave should respond with blank message (just the [new] address + &lt;CR&gt; +</span></div>\n<div class=\"line\"><a id=\"l-136\" name=\"l-136\"></a><span class=\"linenos\">136</span><span class=\"w\">        </span><span class=\"c1\">// &lt;LF&gt;)</span></div>\n<div class=\"line\"><a id=\"l-137\" name=\"l-137\"></a><span class=\"linenos\">137</span><span class=\"w\">        </span><span class=\"n\">sensorAddress</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-138\" name=\"l-138\"></a><span class=\"linenos\">138</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-139\" name=\"l-139\"></a><span class=\"linenos\">139</span><span class=\"w\">      </span><span class=\"k\">default</span><span class=\"o\">:</span></div>\n<div class=\"line\"><a id=\"l-140\" name=\"l-140\"></a><span class=\"linenos\">140</span><span class=\"w\">        </span><span class=\"c1\">// Mostly for debugging; send back UNKN if unexpected command received</span></div>\n<div class=\"line\"><a id=\"l-141\" name=\"l-141\"></a><span class=\"linenos\">141</span><span class=\"w\">        </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;UNKN&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-142\" name=\"l-142\"></a><span class=\"linenos\">142</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-143\" name=\"l-143\"></a><span class=\"linenos\">143</span><span class=\"w\">    </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-144\" name=\"l-144\"></a><span class=\"linenos\">144</span><span class=\"w\">  </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-145\" name=\"l-145\"></a><span class=\"linenos\">145</span></div>\n<div class=\"line\"><a id=\"l-146\" name=\"l-146\"></a><span class=\"linenos\">146</span><span class=\"w\">  </span><span class=\"c1\">// Issue the response specified in the switch-case structure above.</span></div>\n<div class=\"line\"><a id=\"l-147\" name=\"l-147\"></a><span class=\"linenos\">147</span><span class=\"w\">  </span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">fullResponse</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"p\">(</span><span class=\"n\">sensorAddress</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">responseStr</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\r\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-148\" name=\"l-148\"></a><span class=\"linenos\">148</span><span class=\"w\">  </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">sendResponse</span><span class=\"p\">(</span><span class=\"n\">fullResponse</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-149\" name=\"l-149\"></a><span class=\"linenos\">149</span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-150\" name=\"l-150\"></a><span class=\"linenos\">150</span></div>\n<div class=\"line\"><a id=\"l-151\" name=\"l-151\"></a><span class=\"linenos\">151</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nf\">formatOutputSDI</span><span class=\"p\">(</span><span class=\"kr\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">measurementValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">unsigned</span><span class=\"w\"> </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">maxChar</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-152\" name=\"l-152\"></a><span class=\"linenos\">152</span><span class=\"w\">  </span><span class=\"cm\">/* Ingests an array of floats and produces Strings in SDI-12 output format */</span></div>\n<div class=\"line\"><a id=\"l-153\" name=\"l-153\"></a><span class=\"linenos\">153</span></div>\n<div class=\"line\"><a id=\"l-154\" name=\"l-154\"></a><span class=\"linenos\">154</span><span class=\"w\">  </span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-155\" name=\"l-155\"></a><span class=\"linenos\">155</span><span class=\"w\">  </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\">      </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-156\" name=\"l-156\"></a><span class=\"linenos\">156</span></div>\n<div class=\"line\"><a id=\"l-157\" name=\"l-157\"></a><span class=\"linenos\">157</span><span class=\"w\">  </span><span class=\"c1\">// upper limit on i should be number of elements in measurementValues</span></div>\n<div class=\"line\"><a id=\"l-158\" name=\"l-158\"></a><span class=\"linenos\">158</span><span class=\"w\">  </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-159\" name=\"l-159\"></a><span class=\"linenos\">159</span><span class=\"w\">    </span><span class=\"c1\">// Read float value &quot;i&quot; as a String with 6 decimal digits</span></div>\n<div class=\"line\"><a id=\"l-160\" name=\"l-160\"></a><span class=\"linenos\">160</span><span class=\"w\">    </span><span class=\"c1\">// (NOTE: SDI-12 specifies max of 7 digits per value; we can only use 6</span></div>\n<div class=\"line\"><a id=\"l-161\" name=\"l-161\"></a><span class=\"linenos\">161</span><span class=\"w\">    </span><span class=\"c1\">//  decimal place precision if integer part is one digit)</span></div>\n<div class=\"line\"><a id=\"l-162\" name=\"l-162\"></a><span class=\"linenos\">162</span><span class=\"w\">    </span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"p\">(</span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-163\" name=\"l-163\"></a><span class=\"linenos\">163</span><span class=\"w\">    </span><span class=\"c1\">// Explicitly add implied + sign if non-negative</span></div>\n<div class=\"line\"><a id=\"l-164\" name=\"l-164\"></a><span class=\"linenos\">164</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">valStr</span><span class=\"p\">.</span><span class=\"n\">charAt</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"sc\">&#39;-&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">&#39;+&#39;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-165\" name=\"l-165\"></a><span class=\"linenos\">165</span><span class=\"w\">    </span><span class=\"c1\">// Append dValues[j] if it will not exceed 35 (aM!) or 75 (aC!) characters</span></div>\n<div class=\"line\"><a id=\"l-166\" name=\"l-166\"></a><span class=\"linenos\">166</span><span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">length</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">maxChar</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-167\" name=\"l-167\"></a><span class=\"linenos\">167</span><span class=\"w\">      </span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-168\" name=\"l-168\"></a><span class=\"linenos\">168</span><span class=\"w\">    </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-169\" name=\"l-169\"></a><span class=\"linenos\">169</span><span class=\"w\">    </span><span class=\"c1\">// Start a new dValues &quot;line&quot; if appending would exceed 35/75 characters</span></div>\n<div class=\"line\"><a id=\"l-170\" name=\"l-170\"></a><span class=\"linenos\">170</span><span class=\"w\">    </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-171\" name=\"l-171\"></a><span class=\"linenos\">171</span><span class=\"w\">      </span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"o\">++</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">valStr</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-172\" name=\"l-172\"></a><span class=\"linenos\">172</span><span class=\"w\">    </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-173\" name=\"l-173\"></a><span class=\"linenos\">173</span><span class=\"w\">  </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-174\" name=\"l-174\"></a><span class=\"linenos\">174</span></div>\n<div class=\"line\"><a id=\"l-175\" name=\"l-175\"></a><span class=\"linenos\">175</span><span class=\"w\">  </span><span class=\"c1\">// Fill rest of dValues with blank strings</span></div>\n<div class=\"line\"><a id=\"l-176\" name=\"l-176\"></a><span class=\"linenos\">176</span><span class=\"w\">  </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"o\">++</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-177\" name=\"l-177\"></a><span class=\"linenos\">177</span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-178\" name=\"l-178\"></a><span class=\"linenos\">178</span></div>\n<div class=\"line\"><a id=\"l-179\" name=\"l-179\"></a><span class=\"linenos\">179</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nb\">setup</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-180\" name=\"l-180\"></a><span class=\"linenos\">180</span><span class=\"w\">  </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"nf\">begin</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-181\" name=\"l-181\"></a><span class=\"linenos\">181</span><span class=\"w\">  </span><span class=\"nf\">delay</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-182\" name=\"l-182\"></a><span class=\"linenos\">182</span><span class=\"w\">  </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">forceListen</span><span class=\"p\">();</span><span class=\"w\">  </span><span class=\"c1\">// sets SDIPIN as input to prepare for incoming message</span></div>\n<div class=\"line\"><a id=\"l-183\" name=\"l-183\"></a><span class=\"linenos\">183</span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-184\" name=\"l-184\"></a><span class=\"linenos\">184</span></div>\n<div class=\"line\"><a id=\"l-185\" name=\"l-185\"></a><span class=\"linenos\">185</span><span class=\"kr\">void</span><span class=\"w\"> </span><span class=\"nb\">loop</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-186\" name=\"l-186\"></a><span class=\"linenos\">186</span><span class=\"w\">  </span><span class=\"kr\">static</span><span class=\"w\"> </span><span class=\"kr\">float</span><span class=\"w\"> </span><span class=\"n\">measurementValues</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// 9 floats to hold simulated sensor data</span></div>\n<div class=\"line\"><a id=\"l-187\" name=\"l-187\"></a><span class=\"linenos\">187</span><span class=\"w\">  </span><span class=\"kr\">static</span><span class=\"w\"> </span><span class=\"kr\">String</span></div>\n<div class=\"line\"><a id=\"l-188\" name=\"l-188\"></a><span class=\"linenos\">188</span><span class=\"w\">    </span><span class=\"n\">dValues</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// 10 String objects to hold the responses to aD0!-aD9! commands</span></div>\n<div class=\"line\"><a id=\"l-189\" name=\"l-189\"></a><span class=\"linenos\">189</span><span class=\"w\">  </span><span class=\"kr\">static</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">commandReceived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// String object to hold the incoming command</span></div>\n<div class=\"line\"><a id=\"l-190\" name=\"l-190\"></a><span class=\"linenos\">190</span></div>\n<div class=\"line\"><a id=\"l-191\" name=\"l-191\"></a><span class=\"linenos\">191</span></div>\n<div class=\"line\"><a id=\"l-192\" name=\"l-192\"></a><span class=\"linenos\">192</span><span class=\"w\">  </span><span class=\"c1\">// If a byte is available, an SDI message is queued up. Read in the entire message</span></div>\n<div class=\"line\"><a id=\"l-193\" name=\"l-193\"></a><span class=\"linenos\">193</span><span class=\"w\">  </span><span class=\"c1\">// before proceeding.  It may be more robust to add a single character per loop()</span></div>\n<div class=\"line\"><a id=\"l-194\" name=\"l-194\"></a><span class=\"linenos\">194</span><span class=\"w\">  </span><span class=\"c1\">// iteration to a static char buffer; however, the SDI-12 spec requires a precise</span></div>\n<div class=\"line\"><a id=\"l-195\" name=\"l-195\"></a><span class=\"linenos\">195</span><span class=\"w\">  </span><span class=\"c1\">// response time, and this method is invariant to the remaining loop() contents.</span></div>\n<div class=\"line\"><a id=\"l-196\" name=\"l-196\"></a><span class=\"linenos\">196</span><span class=\"w\">  </span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">avail</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"nf\">available</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-197\" name=\"l-197\"></a><span class=\"linenos\">197</span><span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">avail</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-198\" name=\"l-198\"></a><span class=\"linenos\">198</span><span class=\"w\">    </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">clearBuffer</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-199\" name=\"l-199\"></a><span class=\"linenos\">199</span><span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\">  </span><span class=\"c1\">// Buffer is full; clear</span></div>\n<div class=\"line\"><a id=\"l-200\" name=\"l-200\"></a><span class=\"linenos\">200</span><span class=\"w\">  </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">avail</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-201\" name=\"l-201\"></a><span class=\"linenos\">201</span><span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kr\">int</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">avail</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-202\" name=\"l-202\"></a><span class=\"linenos\">202</span><span class=\"w\">      </span><span class=\"kr\">char</span><span class=\"w\"> </span><span class=\"n\">charReceived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"nf\">read</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-203\" name=\"l-203\"></a><span class=\"linenos\">203</span><span class=\"w\">      </span><span class=\"c1\">// Character &#39;!&#39; indicates the end of an SDI-12 command; if the current</span></div>\n<div class=\"line\"><a id=\"l-204\" name=\"l-204\"></a><span class=\"linenos\">204</span><span class=\"w\">      </span><span class=\"c1\">// character is &#39;!&#39;, stop listening and respond to the command</span></div>\n<div class=\"line\"><a id=\"l-205\" name=\"l-205\"></a><span class=\"linenos\">205</span><span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">charReceived</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"sc\">&#39;!&#39;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-206\" name=\"l-206\"></a><span class=\"linenos\">206</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">PROCESS_COMMAND</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-207\" name=\"l-207\"></a><span class=\"linenos\">207</span><span class=\"w\">        </span><span class=\"c1\">// Command string is completed; do something with it</span></div>\n<div class=\"line\"><a id=\"l-208\" name=\"l-208\"></a><span class=\"linenos\">208</span><span class=\"w\">        </span><span class=\"n\">parseSdi12Cmd</span><span class=\"p\">(</span><span class=\"n\">commandReceived</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-209\" name=\"l-209\"></a><span class=\"linenos\">209</span><span class=\"w\">        </span><span class=\"c1\">// Clear command string to reset for next command</span></div>\n<div class=\"line\"><a id=\"l-210\" name=\"l-210\"></a><span class=\"linenos\">210</span><span class=\"w\">        </span><span class=\"n\">commandReceived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-211\" name=\"l-211\"></a><span class=\"linenos\">211</span><span class=\"w\">        </span><span class=\"c1\">// &#39;!&#39; should be the last available character anyway, but exit the &quot;for&quot; loop</span></div>\n<div class=\"line\"><a id=\"l-212\" name=\"l-212\"></a><span class=\"linenos\">212</span><span class=\"w\">        </span><span class=\"c1\">// just in case there are any stray characters</span></div>\n<div class=\"line\"><a id=\"l-213\" name=\"l-213\"></a><span class=\"linenos\">213</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">clearBuffer</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-214\" name=\"l-214\"></a><span class=\"linenos\">214</span><span class=\"w\">        </span><span class=\"c1\">// eliminate the chance of getting anything else after the &#39;!&#39;</span></div>\n<div class=\"line\"><a id=\"l-215\" name=\"l-215\"></a><span class=\"linenos\">215</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">forceHold</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-216\" name=\"l-216\"></a><span class=\"linenos\">216</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-217\" name=\"l-217\"></a><span class=\"linenos\">217</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-218\" name=\"l-218\"></a><span class=\"linenos\">218</span><span class=\"w\">      </span><span class=\"c1\">// If the current character is anything but &#39;!&#39;, it is part of the command</span></div>\n<div class=\"line\"><a id=\"l-219\" name=\"l-219\"></a><span class=\"linenos\">219</span><span class=\"w\">      </span><span class=\"c1\">// string.  Append the commandReceived String object.</span></div>\n<div class=\"line\"><a id=\"l-220\" name=\"l-220\"></a><span class=\"linenos\">220</span><span class=\"w\">      </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-221\" name=\"l-221\"></a><span class=\"linenos\">221</span><span class=\"w\">        </span><span class=\"c1\">// Append command string with new character</span></div>\n<div class=\"line\"><a id=\"l-222\" name=\"l-222\"></a><span class=\"linenos\">222</span><span class=\"w\">        </span><span class=\"n\">commandReceived</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"p\">(</span><span class=\"n\">charReceived</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-223\" name=\"l-223\"></a><span class=\"linenos\">223</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-224\" name=\"l-224\"></a><span class=\"linenos\">224</span><span class=\"w\">    </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-225\" name=\"l-225\"></a><span class=\"linenos\">225</span><span class=\"w\">  </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-226\" name=\"l-226\"></a><span class=\"linenos\">226</span></div>\n<div class=\"line\"><a id=\"l-227\" name=\"l-227\"></a><span class=\"linenos\">227</span><span class=\"w\">  </span><span class=\"c1\">// For aM! and aC! commands, parseSdi12Cmd will modify &quot;state&quot; to indicate that</span></div>\n<div class=\"line\"><a id=\"l-228\" name=\"l-228\"></a><span class=\"linenos\">228</span><span class=\"w\">  </span><span class=\"c1\">// a measurement should be taken</span></div>\n<div class=\"line\"><a id=\"l-229\" name=\"l-229\"></a><span class=\"linenos\">229</span><span class=\"w\">  </span><span class=\"k\">switch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-230\" name=\"l-230\"></a><span class=\"linenos\">230</span><span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">WAIT</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-231\" name=\"l-231\"></a><span class=\"linenos\">231</span><span class=\"w\">      </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-232\" name=\"l-232\"></a><span class=\"linenos\">232</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-233\" name=\"l-233\"></a><span class=\"linenos\">233</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-234\" name=\"l-234\"></a><span class=\"linenos\">234</span><span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">INITIATE_CONCURRENT</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-235\" name=\"l-235\"></a><span class=\"linenos\">235</span><span class=\"w\">      </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-236\" name=\"l-236\"></a><span class=\"linenos\">236</span><span class=\"w\">        </span><span class=\"c1\">// Do whatever the sensor is supposed to do here</span></div>\n<div class=\"line\"><a id=\"l-237\" name=\"l-237\"></a><span class=\"linenos\">237</span><span class=\"w\">        </span><span class=\"c1\">// For this example, we will just create arbitrary &quot;simulated&quot; sensor data</span></div>\n<div class=\"line\"><a id=\"l-238\" name=\"l-238\"></a><span class=\"linenos\">238</span><span class=\"w\">        </span><span class=\"c1\">// NOTE: Your application might have a different data type (e.g. int) and</span></div>\n<div class=\"line\"><a id=\"l-239\" name=\"l-239\"></a><span class=\"linenos\">239</span><span class=\"w\">        </span><span class=\"c1\">//       number of values to report!</span></div>\n<div class=\"line\"><a id=\"l-240\" name=\"l-240\"></a><span class=\"linenos\">240</span><span class=\"w\">        </span><span class=\"n\">pollSensor</span><span class=\"p\">(</span><span class=\"n\">measurementValues</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-241\" name=\"l-241\"></a><span class=\"linenos\">241</span><span class=\"w\">        </span><span class=\"c1\">// Populate the &quot;dValues&quot; String array with the values in SDI-12 format</span></div>\n<div class=\"line\"><a id=\"l-242\" name=\"l-242\"></a><span class=\"linenos\">242</span><span class=\"w\">        </span><span class=\"n\">formatOutputSDI</span><span class=\"p\">(</span><span class=\"n\">measurementValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">75</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-243\" name=\"l-243\"></a><span class=\"linenos\">243</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WAIT</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-244\" name=\"l-244\"></a><span class=\"linenos\">244</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">forceListen</span><span class=\"p\">();</span><span class=\"w\">  </span><span class=\"c1\">// sets SDI-12 pin as input to prepare for incoming</span></div>\n<div class=\"line\"><a id=\"l-245\" name=\"l-245\"></a><span class=\"linenos\">245</span><span class=\"w\">                                   </span><span class=\"c1\">// message AGAIN</span></div>\n<div class=\"line\"><a id=\"l-246\" name=\"l-246\"></a><span class=\"linenos\">246</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-247\" name=\"l-247\"></a><span class=\"linenos\">247</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-248\" name=\"l-248\"></a><span class=\"linenos\">248</span><span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">INITIATE_MEASUREMENT</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-249\" name=\"l-249\"></a><span class=\"linenos\">249</span><span class=\"w\">      </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-250\" name=\"l-250\"></a><span class=\"linenos\">250</span><span class=\"w\">        </span><span class=\"c1\">// Do whatever the sensor is supposed to do here</span></div>\n<div class=\"line\"><a id=\"l-251\" name=\"l-251\"></a><span class=\"linenos\">251</span><span class=\"w\">        </span><span class=\"c1\">// For this example, we will just create arbitrary &quot;simulated&quot; sensor data</span></div>\n<div class=\"line\"><a id=\"l-252\" name=\"l-252\"></a><span class=\"linenos\">252</span><span class=\"w\">        </span><span class=\"c1\">// NOTE: Your application might have a different data type (e.g. int) and</span></div>\n<div class=\"line\"><a id=\"l-253\" name=\"l-253\"></a><span class=\"linenos\">253</span><span class=\"w\">        </span><span class=\"c1\">//       number of values to report!</span></div>\n<div class=\"line\"><a id=\"l-254\" name=\"l-254\"></a><span class=\"linenos\">254</span><span class=\"w\">        </span><span class=\"n\">pollSensor</span><span class=\"p\">(</span><span class=\"n\">measurementValues</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-255\" name=\"l-255\"></a><span class=\"linenos\">255</span><span class=\"w\">        </span><span class=\"c1\">// Populate the &quot;dValues&quot; String array with the values in SDI-12 format</span></div>\n<div class=\"line\"><a id=\"l-256\" name=\"l-256\"></a><span class=\"linenos\">256</span><span class=\"w\">        </span><span class=\"n\">formatOutputSDI</span><span class=\"p\">(</span><span class=\"n\">measurementValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dValues</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-257\" name=\"l-257\"></a><span class=\"linenos\">257</span><span class=\"w\">        </span><span class=\"c1\">// For aM!, Send &quot;service request&quot; (&lt;address&gt;&lt;CR&gt;&lt;LF&gt;) when data is ready</span></div>\n<div class=\"line\"><a id=\"l-258\" name=\"l-258\"></a><span class=\"linenos\">258</span><span class=\"w\">        </span><span class=\"kr\">String</span><span class=\"w\"> </span><span class=\"n\">fullResponse</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">String</span><span class=\"p\">(</span><span class=\"n\">sensorAddress</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\r\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-259\" name=\"l-259\"></a><span class=\"linenos\">259</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">sendResponse</span><span class=\"p\">(</span><span class=\"n\">fullResponse</span><span class=\"p\">);</span></div>\n<div class=\"line\"><a id=\"l-260\" name=\"l-260\"></a><span class=\"linenos\">260</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WAIT</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-261\" name=\"l-261\"></a><span class=\"linenos\">261</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">forceListen</span><span class=\"p\">();</span><span class=\"w\">  </span><span class=\"c1\">// sets SDI-12 pin as input to prepare for incoming</span></div>\n<div class=\"line\"><a id=\"l-262\" name=\"l-262\"></a><span class=\"linenos\">262</span><span class=\"w\">                                   </span><span class=\"c1\">// message AGAIN</span></div>\n<div class=\"line\"><a id=\"l-263\" name=\"l-263\"></a><span class=\"linenos\">263</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-264\" name=\"l-264\"></a><span class=\"linenos\">264</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-265\" name=\"l-265\"></a><span class=\"linenos\">265</span><span class=\"w\">    </span><span class=\"k\">case</span><span class=\"w\"> </span><span class=\"no\">PROCESS_COMMAND</span><span class=\"p\">:</span></div>\n<div class=\"line\"><a id=\"l-266\" name=\"l-266\"></a><span class=\"linenos\">266</span><span class=\"w\">      </span><span class=\"p\">{</span></div>\n<div class=\"line\"><a id=\"l-267\" name=\"l-267\"></a><span class=\"linenos\">267</span><span class=\"w\">        </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WAIT</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-268\" name=\"l-268\"></a><span class=\"linenos\">268</span><span class=\"w\">        </span><span class=\"n\">slaveSDI12</span><span class=\"p\">.</span><span class=\"n\">forceListen</span><span class=\"p\">();</span></div>\n<div class=\"line\"><a id=\"l-269\" name=\"l-269\"></a><span class=\"linenos\">269</span><span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span></div>\n<div class=\"line\"><a id=\"l-270\" name=\"l-270\"></a><span class=\"linenos\">270</span><span class=\"w\">      </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-271\" name=\"l-271\"></a><span class=\"linenos\">271</span><span class=\"w\">  </span><span class=\"p\">}</span></div>\n<div class=\"line\"><a id=\"l-272\" name=\"l-272\"></a><span class=\"linenos\">272</span><span class=\"p\">}</span>\n</div></div></div>",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": [
      [
        "k_concurrent_logger_8ino-example.html",
        "k_concurrent_logger.ino"
      ],
      [
        "examples_page.html",
        "Examples using the SDI-12 Library"
      ],
      [
        "g_terminal_window_8ino-example.html",
        "g_terminal_window.ino"
      ]
    ],
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [],
    "public_static_funcs": [],
    "typeless_funcs": [],
    "public_funcs": [],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": false,
    "has_typedef_details": false,
    "has_func_details": false,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "Examples using the SDI-12 Library",
        "examples_page.html"
      ],
      [
        "h_SDI-12_slave_implementation.ino",
        "h__s_d_i-12_slave_implementation_8ino-example.html"
      ]
    ]
  }
}